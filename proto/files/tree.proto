syntax = "proto3";

package filespb;

import "google/api/annotations.proto";


enum Action {
    NO_ACTION = 0;
    CREATE = 1;
    DELETE = 2;
    MOVE = 3;
    RENAME = 4;
    WRITE = 5;
    READ = 6;
    GROW = 7;
}

enum NodeType {
    UNKNOWN = 0;
    FILE = 1;
    DIRECTORY = 2;
}

message NodeInfo {
    string id = 1;
    NodeType type = 2;
    string name = 3;
    string parent = 4;
    int64 size = 5;
    int64 create_time = 6;
    int64 edit_time = 7;
    int64 access_time = 8;
    string hash = 9;
}

message Event {
    Action action = 2;
    string path = 3;
    NodeInfo file_info = 4;
}

message Meta {
    string name = 1;
    string value = 3;
}

message ListRequest {
    string dir = 1;
    uint32 page = 2;
}
message ListResponse {
    repeated NodeInfo list = 1;
    uint32 page = 2;
    uint32 page_count = 3;
}

message CreateRequest {
    string path = 1;
    NodeType type = 2;
}
message CreateResponse {
}

message GetInfoRequest {
    string path = 1;
    bool with_hash = 2;
}
message GetInfoResponse {
    NodeInfo info = 1;
}

message GetListStreamRequest {
    string dir = 1;
}

message GetMetaRequest {
    string path = 1;
}
message GetMetaResponse {
    repeated Meta meta = 1;
}

message SetMetaRequest {
    string path = 1;
}
message SetMetaResponse {}

message CopyRequest {
    repeated string paths = 1;
    string dir = 2;
}
message CopyResponse {}

message MoveRequest {
    repeated string paths = 1;
    string destination_folder = 2;
}
message MoveResponse {
}

message RenameRequest {
    string path = 1;
    string new_name = 2;
}
message RenameResponse {
}

message UploadInfoRequest {
    string file = 1;
    int64 content_size = 2;
    bool append = 3;
}
message UploadInfoResponse {
    string url = 1;
}

message DownloadInfoRequest {
    string file = 1;
}
message DownloadInfoResponse {
    string url = 1;
}

message DeleteRequest {
    string path = 1;
}
message DeleteResponse {
}

service TreeService {
    rpc List (ListRequest) returns (ListResponse) {
        option(google.api.http).get = "/api/tree/list/{dir=**}";
    };

    rpc GetListStream(GetListStreamRequest) returns (stream NodeInfo);

    rpc Create (CreateRequest) returns (CreateResponse) {
        option(google.api.http).get = "/api/tree/create/{path=**}";
    };
    rpc GetInfo (GetInfoRequest) returns (GetInfoResponse) {
        option(google.api.http).get = "/api/tree/info/{path=**}";
    };

    rpc GetInfoSession(stream GetInfoRequest) returns (stream NodeInfo);

    rpc GetMeta (GetMetaRequest) returns (GetMetaResponse) {
        option(google.api.http).get = "/api/tree/meta/{path=**}";
    };
    rpc SetMeta (SetMetaRequest) returns (SetMetaResponse) {
        option(google.api.http) = {
            post: "/api/tree/meta/{path=**}";
            body: "*";
        };
    };
    rpc DownloadURL (DownloadInfoRequest) returns (DownloadInfoResponse) {
        option(google.api.http).get = "/api/tree/download_url/{file=**}";
    };
    rpc UploadURL (UploadInfoRequest) returns (UploadInfoResponse) {
        option(google.api.http).get = "/api/tree/upload_url/{file=**}";
    };
    rpc Copy (CopyRequest) returns (CopyResponse) {
        option(google.api.http) = {
            post: "/api/tree/copy";
            body: "*";
        };
    };
    rpc Move (MoveRequest) returns (MoveResponse) {
        option(google.api.http) = {
            post: "/api/tree/move";
            body: "*";
        };
    };
    rpc Delete (DeleteRequest) returns (DeleteResponse) {
        option(google.api.http).get = "/api/tree/delete/{path=**}";
    };
}