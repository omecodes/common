{
  "swagger": "2.0",
  "info": {
    "title": "service.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/services/deregister/{registry_id}": {
      "get": {
        "operationId": "Deregister",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/servicepbDeregisterResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "registry_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Registry"
        ]
      }
    },
    "/api/v1/services/get/{registry_id}": {
      "get": {
        "operationId": "Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/servicepbGetResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "registry_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Registry"
        ]
      }
    },
    "/api/v1/services/list": {
      "get": {
        "operationId": "List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/servicepbListResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Registry"
        ]
      }
    },
    "/api/v1/services/register": {
      "post": {
        "operationId": "Register",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/servicepbRegisterResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/servicepbRegisterRequest"
            }
          }
        ],
        "tags": [
          "Registry"
        ]
      }
    },
    "/api/v1/services/search": {
      "get": {
        "operationId": "Search",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/servicepbSearchResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Unknown",
              "Authority",
              "IDM",
              "UsersHierarchy",
              "UserInfo",
              "ConfigsStore",
              "Storage"
            ],
            "default": "Unknown"
          }
        ],
        "tags": [
          "Registry"
        ]
      }
    }
  },
  "definitions": {
    "servicepbDeregisterResponse": {
      "type": "object"
    },
    "servicepbGetResponse": {
      "type": "object",
      "properties": {
        "info": {
          "$ref": "#/definitions/servicepbInfo"
        }
      }
    },
    "servicepbInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/servicepbType"
        },
        "label": {
          "type": "string"
        },
        "nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/servicepbNode"
          }
        },
        "meta": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "servicepbListResponse": {
      "type": "object",
      "properties": {
        "applications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/servicepbInfo"
          }
        }
      }
    },
    "servicepbNode": {
      "type": "object",
      "properties": {
        "protocol": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "security": {
          "$ref": "#/definitions/servicepbSecurity"
        },
        "ttl": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "servicepbRegisterRequest": {
      "type": "object",
      "properties": {
        "service": {
          "$ref": "#/definitions/servicepbInfo"
        }
      }
    },
    "servicepbRegisterResponse": {
      "type": "object",
      "properties": {
        "registry_id": {
          "type": "string"
        }
      }
    },
    "servicepbSearchResponse": {
      "type": "object",
      "properties": {
        "services": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/servicepbInfo"
          }
        }
      }
    },
    "servicepbSecurity": {
      "type": "string",
      "enum": [
        "None",
        "ServerTLS",
        "MutualTLS"
      ],
      "default": "None"
    },
    "servicepbType": {
      "type": "string",
      "enum": [
        "Unknown",
        "Authority",
        "IDM",
        "UsersHierarchy",
        "UserInfo",
        "ConfigsStore",
        "Storage"
      ],
      "default": "Unknown"
    }
  }
}
